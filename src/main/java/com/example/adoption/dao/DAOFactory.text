package com.example.adoption.dao;

import com.example.adoption.dao.InMemory.InMemoryAdopterDAO;
import com.example.adoption.dao.jpa.JPAAdopterDAO;
import com.example.adoption.service.AdopterService;

import java.util.Map;
import java.util.ResourceBundle;
import java.util.concurrent.ConcurrentHashMap;

public class DAOFactory {

    private static Map<String, Object> objects = new ConcurrentHashMap<>();
    private static String profile;

    static {
        // This one is the package name
        ResourceBundle bundle = ResourceBundle.getBundle("com/example/adoption");
        //This is the properties name
        profile = bundle.getString("spring.profiles.active");
    }

    public static AdopterDAO adopterDAO() {
        return switch(profile) {
            case "dev" -> (AdopterDAO)objects.computeIfAbsent("adopterDAO", k -> new InMemoryAdopterDAO());
            case "prod" -> (AdopterDAO)objects.computeIfAbsent("adopterDAO", k -> new JPAAdopterDAO());
            default -> throw new RuntimeException("Unknown profile: " + profile);
        };
    }

    public static AdopterService adopterService() {
        AdopterService service =
                (AdopterService) objects.computeIfAbsent("adopterService",
                        k -> {
                            AdopterService as = new AdopterService();
                            AdopterDAO dao = adopterDAO();
                            as.setAdopterDAO(dao);
                            return as;
                        });


        return service;
    }
}
